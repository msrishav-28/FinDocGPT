apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: financial-intelligence
data:
  ENVIRONMENT: "production"
  ALLOW_MODEL_DOWNLOAD: "0"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  CELERY_BROKER_URL: "redis://redis-service:6379/1"
  CELERY_RESULT_BACKEND: "redis://redis-service:6379/2"
  LOG_LEVEL: "INFO"
  POSTGRES_DB: "financial_intelligence"
  POSTGRES_USER: "postgres"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: financial-intelligence
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        upstream backend {
            server backend-service:8000;
        }
        
        upstream frontend {
            server frontend-service:80;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Frontend
            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # API
            location /api/ {
                proxy_pass http://backend/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # WebSocket
            location /ws/ {
                proxy_pass http://backend/ws/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }